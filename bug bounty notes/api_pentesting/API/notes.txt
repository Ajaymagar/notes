Api course Notes 

SQl injection 
Command Injection 
XXE if XML is processed by the server
Lack of Output Encoding
Insecure Direct Object reference 

Sql injection in auth 
when we login we recived a token in response which is store in db or JWt 
copy the token and make a new requests 
http://domain.com/v1/users.php?format=json&token=454165419+82d4dfdferfsdv48989

paste this req in private browser and intercept the requests 

after the intercepting the request 
in token parameter try sql payload 

GET /v1/users.php?format=json&token=invalid_token' +or+'1'='1


------------ sensitive information in GET request ------------------- 

jab token milta tab uss token ko use kakre authenticate karne ka try karo with GET requests 
hua to bug he

token se profile request kiya or response me data dikah like password in clear text  to bug he


------------------- Weak Auth token And IDors ----------------------- 

jab login karte he tab same token milat he ky bar bar dekho repeater me 
weaka auth token 


---------- case 1 ----------- 
jo auth token tha vo usrename ka md5 hash tha check that in testing    #lack of access control 
vo token use karke info disclose hua									# gemerate Weak token 


---------------------- Broken Authentication in rest ---------------
username=test'+or+'1'='1' --+&password=test



----------------- special Tips ------------------- 
try differenct http  Method
agar koi prifile visit ki GET reuest he usko Delete karke dekho 

post request me json data nikale ke xml data dalo or header change karo 
if server accept the xml then exploit the bug 



If you playing with `API ENDPOINT` always try to send `INVALID CONTENT TYPE` end-up by getting hidden endpoints in `RESPONSE` 

If you are testing a JSON endpoint, always try to change one letter in the parameter names to make them invalid.
 I had quite a few cases where the server thrown back an error with all of the accepted parameters.


# Pentest for REST API? Give it a chance, check if the API supports also SOAP.
# Change the content-type to "application/xml", add simple XML in the request body
# and see how the API handles it.


