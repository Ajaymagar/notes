
https://blog.doyensec.com/2018/05/17/graphql-security-overview.html
https://book.hacktricks.xyz/pentesting/pentesting-web/graphql#tools
https://blog.usejournal.com/graphql-bug-to-steal-anyones-address-fc34f0374417
https://blog.yeswehack.com/yeswerhackers/how-exploit-graphql-endpoint-bug-bounty/
https://blog.graphqleditor.com/inql-graphql-security-scanner/



burp extension for graphql 

https://portswigger.net/bappstore/296e9a0730384be4b2fffef7b4e19b1f

https://portswigger.net/bappstore/4841f0d78a554ca381c65b26d48207e6

online  tool for visualize  

https://apis.guru/graphql-voyager/

github tools 

github.com/doyensec/graph-ql


populer endpoint of graphql 
graphql/
graphql/console/
/graphql.php
/graphiql
/graphiql.php
/explorer
/altair
/playground
/v1/explorer
/v1/graphiql
/graph
/graphql
/graphql/console/
/graphql.php
/graphiql

also custom 

/graphql-explorer
/graphiql/finland


You can find more complete list on SecLists.
Another way to identify an hidden endpoint by searching some keywords in 
JavaScripts files like “query“, “mutation“, “graphql” and it could be reveal 
the presence of GraphQL decommissioned/unofficial endpoint.


But look out for request/response referencing queries , mutations

{"query":"{\n users \n{\n id \n email \n name\n}\n}","variables":"null"}

A good way to confirm that yes, we are in presence of a GraphQL endpoint is to issue a request where we specify an invalid query.

https://127.0.0.1:8000/graphql/?query={}   iske badd error aye response me      and check the methods 


https://gist.github.com/localh0t/240a8037922a0b168ea85fd8fef7bded     #url encoded request me dalne ke liye 


valid endpoint milne pe usko inql scanner me dalke load karo 

   -------------------------- about graphql ------------------------- 
graphql implements a graphql structure as the database 

There are  queries and mutations 

Quries fetch data 

Mutation allows the data to be edited 

Fragments allow for eailsy saved lists of fields 

MetaFields allow for the inspection of query or mutation information 

Authorization busg are more common in graphql

pay attention to edges as well as nodes 

try to access objects directly via node/nodes fields



my first step is typically to try to run introspection queries against the endpoints. 
If successful; an Introspection query in GraphQL will give you a ton of information about the “schema”/data configuration. 
Things like what type of information exists, 
how it all is connected, what format it accepts, how to query the data, and how to manipulate the data



----------------------- end ------------------------------------------- 


1] Introspection Vulnerability 
introspection query allows developers to obtain data schema however if the application does not require authentication and 
Authorization before doing query ,an attckers can abuse this function to obtain "hidden" API endpoints 

after getting endpoint check introsepection is  enabaled or not

example.com/graphql?query={}        endpoint milne pe apan query parameter laga sakthe he 

katie tip go the the payload all thing - graphql injection folder - introspection query - copy - paste in query burp

So I fired following introspection query
https://api.stg.target.com/graphq?query={__schema{types{name,fields{name}}}} (And yes it throws all the typenames and field values}

another tip for introspection query 

response me jo introspection wala data ayega usko copy karke  ye site pe https://apis.guru/graphql-voyager/ pe introspection 
wale tab me paste kardo  


Now there is a small problem with the online graphQL visualization. It does not show mutations, voyager me mutation nahi dikhata 
https://github.com/graphql/graphql-playground   new tools to play with graphql 




------------ graphql-path-enum ---------------------------- 

This is a tool that lists the different ways of reaching a given type in a GraphQL schema. 
It takes the introspection query result as input. 
You can find more about it in this blog post by the creator of this tool.

https://blog.deesee.xyz/graphql/security/2020/04/13/graphql-permission-testing.html





---------------- when introspection is disabled -------------------- 

api tools clairvoyance python tool 

python3 -m clairvoyance -vv output.json -w wordlist.txt https://target.com/graphql     - wordlist = single words 








-------------------------------------------------------
There is node / nodes fields 

That allows us to acess objects directly By ID 

cat schema.json | \
   jq '.data.__schema.types' | \
   jq '.[] | select(.name=="Query")' | \
   jq '.fields[] | .name' | \
   grep -E (node | nodes)'
 
 

InQL burp extension  
iss tab me jake sirf endpoint dalna he 

https://www.example.com/graphql   sab query type and mutation type aa jayega 

common graphql bugs 

the same as API bugs 
IDOR 
info disclosure 





--------------- sql injection in graphql ------------------ 

{
   users (type:"student '  "){             #this single quatation can generate SQL Error 

      id,
      type,
      price,

}

}





------------------------ end ------------------------------




site:medium.com "graphql exploit"
GraphQL vulnerabilities HackerOne
GraphQL introspection query HackerOne
Apollo GraphQL exploit
GraphQL vulnerability scanner
GraphQL injection HackerOne



 